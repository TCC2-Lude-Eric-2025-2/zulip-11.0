name: SonarCloud Analysis

on:
  push:
    branches: ["main", "11.0"]
  pull_request:
    branches: ["main", "11.0"]
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout completo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessário para histórico completo no SonarCloud

      # 2️⃣ Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3️⃣ Cache de pip
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/dev.txt') }}

      # 4️⃣ Garantir virtualenv e instalar dependências
      - name: Ensure virtualenv and install dependencies
        run: |
          if [ ! -d ".venv" ]; then
            python -m venv .venv
          fi
          .venv/bin/pip install --upgrade pip setuptools wheel
          .venv/bin/pip install -r requirements/dev.txt
          .venv/bin/pip install pytest pytest-cov mypy ruff

      # 5️⃣ Rodar testes e gerar coverage.xml
      - name: Run backend tests with coverage
        run: |
          .venv/bin/pytest --cov=src --cov-report=xml:var/coverage.xml

      # 6️⃣ Análise estática opcional
      - name: Run static analysis (mypy & ruff)
        run: |
          .venv/bin/mypy src || true
          .venv/bin/ruff check src || true

      # 7️⃣ SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.10
        with:
          args: >
            -Dsonar.projectKey=TCC2-Lude-Eric-2025-2_zulip-11.0
            -Dsonar.organization=tcc2-lude-eric-2025-2
            -Dsonar.python.coverage.reportPaths=var/coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
