name: SonarCloud Analysis

on:
  push:
    branches: ["main", "11.0"]
  pull_request:
    branches: ["main", "11.0"]
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  sonarcloud:
    name: Run SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Cache pip
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies and provision Zulip
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          ./tools/provision --no-dev || echo "⚠️ Provision completed with warnings"

      # 5. Activate Zulip virtualenv
      - name: Activate Zulip venv
        run: |
          echo "Activating Zulip venv..."
          source .venv/bin/activate
          python -V

      # 6. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      # 7. Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      # 8. Install frontend dependencies
      - name: Install frontend dependencies
        run: pnpm install

      # 9. Run backend tests with coverage
      - name: Run backend tests
        run: |
          mkdir -p var
          source .venv/bin/activate
          ./tools/test-backend --coverage --xml-report || echo "⚠️ Some backend tests failed"
          [ -f "var/coverage.xml" ] && echo "✅ Backend coverage report created" || echo "❌ Backend coverage.xml missing"

      # 10. Run frontend tests with coverage
      - name: Run frontend tests
        run: |
          mkdir -p var/node-coverage
          ./tools/test-js-with-node --coverage || echo "⚠️ Some frontend tests failed"
          [ -f "var/node-coverage/lcov.info" ] && echo "✅ Frontend LCOV created" || echo "❌ Frontend lcov.info missing"

      # 11. SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=TCC2-Lude-Eric-2025-2_zulip-11.0
            -Dsonar.organization=tcc2-lude-eric-2025-2
            -Dsonar.python.coverage.reportPaths=var/coverage.xml
            -Dsonar.javascript.lcov.reportPaths=var/node-coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
